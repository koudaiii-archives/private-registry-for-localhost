upstream docker-registry {
  server %PRIVATE_REGISTRY_HOST%:5000;
  keepalive 256;
}


server {
  listen 443 ssl;
  server_name %SERVER_NAME%;
  allow %ALLOW_IP%/%ALLOW_SUBNET%;
  deny all;

  # SSL
  ssl_certificate /etc/nginx/conf.d/domain.crt;
  ssl_certificate_key /etc/nginx/conf.d/domain.key;

  # Recommendations from https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
  ssl_protocols TLSv1.1 TLSv1.2;
  ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;

  # disable any limits to avoid HTTP 413 for large image uploads
  client_max_body_size 0;

  # required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)
  chunked_transfer_encoding on;

  location /v2/ {
    proxy_pass                          http://docker-registry;
    proxy_set_header  Host              \$http_host;   # required for docker client's sake
    proxy_set_header  X-Real-IP         \$remote_addr; # pass on real client's IP
    proxy_set_header  X-Forwarded-For   \$proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto \$scheme;
    proxy_read_timeout                  900;
  }
}
server {
  listen 8000;
  error_page 500 502 503 504 @error;

  location /status {
    add_header Cache-Control no-cache;
    root /var/www/nginx-default;
    rewrite ^(.*)$ /status.html break;
  }

  location @error {
    add_header Cache-Control no-cache;
    root /var/www/nginx-default;
    rewrite ^(.*)$ /error.html break;
  }
}
